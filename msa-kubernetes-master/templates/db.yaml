apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    deployment: msa-db
    {{- include "msa.labels" . | nindent 4 }}
  name: msa-db
spec:
  replicas: 1
  selector:
    matchLabels:
      deployment: msa-db
      {{- include "msa.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        deployment: msa-db
        {{- include "msa.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        - name: volume-mount-chown
          image: busybox:1.28
          command: ["sh", "-c", "chown -R 70:70 /pgsqldata"]
          volumeMounts:
            - mountPath: /pgsqldata/pgsql
              subPath: pgsql
              name: msa-db
      containers:
        - env:
          - name: CAMUNDA_DB
            value: process-engine
          - name: CAMUNDA_PASSWORD
            value: camunda
          - name: CAMUNDA_USER
            value: camunda
          - name: KEY_VAULT_DB
            value: key_vault
          - name: KEY_VAULT_USER
            value: key_vault
          - name: MAX_CONNECTIONS
            value: "1600"
          - name: PG_DATABASE
            value: POSTGRESQL
          - name: PG_MODE
            value: primary
          - name: PG_PASSWORD
            value: my_db_password
          - name: PG_PRIMARY_PASSWORD
            value: my_db_password
          - name: PG_PRIMARY_PORT
            value: "5432"
          - name: PG_PRIMARY_USER
            value: postgres
          - name: PG_ROOT_PASSWORD
            value: my_db_password
          - name: PG_USER
            value: postgres
          image: "{{ .Values.msa_db.image }}"
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - /usr/pgsql-12/bin/pg_isready -h localhost
            failureThreshold: 5
            periodSeconds: 30
            timeoutSeconds: 60
          name: msa-db
          ports:
            - containerPort: 5432
          resources: {}
          volumeMounts:
            - mountPath: /pgsqldata/pgsql
              subPath: pgsql
              name: msa-db
      restartPolicy: Always
      volumes:
        - name: msa-db
          persistentVolumeClaim:
            claimName: msa-db
---
apiVersion: v1
kind: Service
metadata:
  labels:
    service: msa-db
    {{- include "msa.labels" . | nindent 4 }}
  name: db
spec:
  ports:
    - name: "5432"
      port: 5432
      targetPort: 5432
  selector:
    deployment: msa-db
    {{- include "msa.selectorLabels" . | nindent 4 }}
